# for CI environment on EC2

cloud:
  aws:
    # AWS common
    region:
      auto: true
    stack:
      auto: false
    # DynamoDB
    dynamodb:
      # DynamoDBは同一テーブル名を使用しているため、環境毎にエンドポイント、もしくはAWSアカウントを切り替える。
      endpoint: https://dynamodb.ap-northeast-2.amazonaws.com
    # SQS
    sqs:
      region: ap-northeast-1
    # CloudWatch
    cloudwatch:
      region: ap-northeast-1

# RDB(RDSを使用)
database:
  common:
    data-source:
      # 各DBの共通設定
      driverClassName: org.postgresql.Driver
      maxActive: 96
      maxIdle: 16
      minIdle: 16
      initialSize: 16
      maxWait: 90000
      password: atrsuser
      username: atrsuser
      validationQuery: SELECT 1
      testOnConnect: true
      testWhileIdle: true
      # Amazon failover の最大値
      # 参考 [http://docs.aws.amazon.com/ja_jp/AmazonRDS/latest/UserGuide/Concepts.MultiAZ.html]
      timeBetweenEvictionRunsMillis: 120000
      removeAbandoned: true
      removeAbandonedTimeout: 60
  default:
    schema:
      name: default
  data-sources:
    - schema: default
      url: jdbc:postgresql://atrs-ci-shard.XXXX.rds.amazonaws.com:5432/atrs?socketTimeout=120&connectTimeout=120
    - schema: atrs1
      url: jdbc:postgresql://atrs-ci-shard1.XXXX.ap-northeast-1.rds.amazonaws.com:5432/atrs?socketTimeout=120&connectTimeout=120
    - schema: atrs2
      url: jdbc:postgresql://atrs-ci-shard2.XXXX.ap-northeast-1.rds.amazonaws.com:5432/atrs?socketTimeout=120&connectTimeout=120

# upload directories
upload:
  bucketName: XXXX.YYYY.ZZZZ
  temporaryDirectory: tmp/
  saveDirectory: save/

# SQS queue name
reservation:
  notification:
    # 環境毎にキューを切り替える。
    queue: RESERVATION_NOTICE_CI

# static contents(CloudFrontを利用)
content:
  url: https://XXX.cloudfront.net

# Logging
logging:
  path: /var/log/atrslogs
  # Workaround for duplicated log files
  config: classpath:atrs-logback-spring.xml

# Redis(ElastiCacheのRedis Clusterを使用)
spring:
  redis:
    cluster:
      nodes:
        - atrs-ci.XXXX.clustercfg.apne1.cache.amazonaws.com:6379
    pool:
      max-active: 8
      max-idle: 8
      max-wait: -1
      min-idle: 0
    listener:
      concurrencyLimit: 2
